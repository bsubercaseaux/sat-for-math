title: Generating and Searching Families of FFT Algorithms
authors: Haynal, Haynal
labels: []
publications:
- name: arXiv
  url: ''
  year: 2011
  bibtex: |
    @misc{haynalGeneratingSearchingFamilies2011,
      title = {Generating and {{Searching Families}} of {{FFT Algorithms}}},
      author = {Haynal, Steve and Haynal, Heidi},
      year = {2011},
      month = aug,
      number = {arXiv:1103.5740},
      eprint = {1103.5740},
      primaryclass = {cs},
      publisher = {arXiv},
      doi = {10.48550/arXiv.1103.5740},
      urldate = {2025-06-02},
      abstract = {A fundamental question of longstanding theoretical interest is to prove the lowest exact count of real additions and multiplications required to compute a power-of-two discrete Fourier transform (DFT). For 35 years the split-radix algorithm held the record by requiring just 4n log n - 6n + 8 arithmetic operations on real numbers for a size-n DFT, and was widely believed to be the best possible. Recent work by Van Buskirk et al. demonstrated improvements to the split-radix operation count by using multiplier coefficients or "twiddle factors" that are not n-th roots of unity for a size-n DFT. This paper presents a Boolean Satisfiability-based proof of the lowest operation count for certain classes of DFT algorithms. First, we present a novel way to choose new yet valid twiddle factors for the nodes in flowgraphs generated by common power-of-two fast Fourier transform algorithms, FFTs. With this new technique, we can generate a large family of FFTs realizable by a fixed flowgraph. This solution space of FFTs is cast as a Boolean Satisfiability problem, and a modern Satisfiability Modulo Theory solver is applied to search for FFTs requiring the fewest arithmetic operations. Surprisingly, we find that there are FFTs requiring fewer operations than the split-radix even when all twiddle factors are n-th roots of unity.},
      archiveprefix = {arXiv},
      keywords = {Computer Science - Information Theory,Computer Science - Logic in Computer Science,Computer Science - Symbolic Computation,Mathematics - Information Theory},
      file = {/Users/bsuberca/Zotero/storage/8L72RFAW/Haynal and Haynal - 2011 - Generating and Searching Families of FFT Algorithm.pdf;/Users/bsuberca/Zotero/storage/GHPQGDCP/1103.html}
    }
